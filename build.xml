<?xml version="1.0"?>

<project name="kaptcha" default="war" basedir=".">

	<property name="name" value="${ant.project.name}" />

	<property file="user.properties" />
	<property file="${user.home}/build.properties" />
	<property file="build.properties" />
	<property file="jar.properties" />

	<property name="base.dir" location="." />
	<property name="lib.dir" location="./lib" />

	<property name="build.dir" location="target" />

	<property name="build.debug" value="on" />
	<property name="build.deprecation" value="on" />

	<property name="ant.build.javac.target" value="1.5" />
	<property name="ant.build.javac.source" value="1.5" />

	<property name="retroweaver.version" value="2.0.7" />
	<property name="retroweaver.home" value="../retroweaver-${retroweaver.version}" />

	<tstamp/>
	<tstamp>
		<format property="YEAR" pattern="yyyy" />
	</tstamp>

	<!-- ******************************************************** -->

	<path id="classpath">
		<fileset dir="${lib.dir}">
			<include name="${servlet.jar}" />
			<include name="${pixels.jar}" />
		</fileset>
	</path>

	<path id="test.classpath">
		<path refid="classpath" />

		<fileset dir="${lib.dir}">
			<include name="${junit.jar}"/>
		</fileset>

		<pathelement location="${build.dir}/classes" />
		<pathelement location="${build.dir}/test/classes" />
	</path>

	<!-- ******************************************************** -->

	<target name="jar" depends="init">
		<mkdir dir="${build.dir}/classes" />

		<unjar src="${lib.dir}/${pixels.jar}" dest="${build.dir}/pixels"/>
		<copy todir="${build.dir}/classes">
			<fileset dir="${build.dir}/pixels">
				<include name="**/*.class" />
			</fileset>
		</copy>

		<javac
			srcdir="${base.dir}/src/"
			destdir="${build.dir}/classes"
			includeAntRuntime="false"
			debug="${build.debug}"
			deprecation="${build.deprecation}"
			target="${ant.build.javac.target}"
			source="${ant.build.javac.source}"
			encoding="UTF-8">

			<classpath refid="classpath" />
		</javac>
		<jar jarfile="${build.dir}/${name}-${version}.jar">
			<fileset dir="${build.dir}/classes"/>
			<manifest>
				<attribute name="Specification-Version" value="${version}" />
				<attribute name="Implementation-Version" value="${TODAY}" />
			</manifest>
		</jar>
	</target>

	<target name="war" depends="jar">
		<war destfile="${build.dir}/${name}.war"
			webxml="${base.dir}/src/resources/web.xml">

			<fileset dir="${base.dir}/doc/">
				<include name="*.jsp" />
			</fileset>

			<lib dir="${build.dir}">
				<include name="${name}-${version}.jar"/>
			</lib>
		</war>
	</target>

	<target name="dist" depends="init-dist, clean, war, javadoc">
		<copy todir="${build.dir}/${dist.name}/">
			<fileset dir=".">
				<include name="doc/**" />
				<include name="README.txt" />
				<include name="LICENSE.txt" />
			</fileset>
		</copy>

		<copy todir="${build.dir}/${dist.name}/">
			<fileset dir="${build.dir}">
				<include name="javadoc/**" />
			</fileset>
		</copy>

		<copy todir="${build.dir}/${dist.name}/">
			<fileset dir=".">
				<include name="src/**" />
			</fileset>
		</copy>

		<copy file="${build.dir}/${name}-${version}.jar" todir="${build.dir}/${dist.name}/" />
		<copy file="${build.dir}/${name}.war" todir="${build.dir}/${dist.name}/" />

		<retroweaver inputjar="${build.dir}/${name}-${version}.jar"
					outputjar="${build.dir}/${dist.name}/${name}-${version}-jdk14.jar" />

		<zip zipfile="${build.dir}/${dist.name}.zip" basedir="${build.dir}/${dist.name}" />
	</target>

	<target name="javadoc" depends="init">
		<property name="javadoc.dir" location="${build.dir}/javadoc" />
		<mkdir dir="${javadoc.dir}"/>

		<javadoc
			destdir="${javadoc.dir}"
			packagenames="*"
			author="true"
			version="true"
			windowtitle="kaptcha Javadoc">
			<classpath refid="classpath" />
			<fileset dir="${base.dir}/src/java"/>
			<doctitle><![CDATA[<h1>kaptcha</h1>]]></doctitle>
			<bottom><![CDATA[<i>Copyright &#169; ${YEAR} <a href="http://code.google.com/p/kaptcha/">Kaptcha</a>. All Rights Reserved. Build version: ${version}</i>]]></bottom>
		</javadoc>
	</target>

	<target name="clean">
		<delete dir="${build.dir}" />
	</target>

	<target name="init-dist" depends="rt-task">
		<input addproperty="version" message="Version number?" />
		<property name="dist.name" value="${name}-${version}" />
	</target>

	<target name="init">
		<typedef resource="com/googlecode/svntask/svntask.xml">
			<classpath>
				<fileset dir="${base.dir}/lib">
					<include name="svnkit.jar"/>
					<include name="svntask.jar"/>
				</fileset>
			</classpath>
		</typedef>
		<svn><info path="${base.dir}" revisionProperty="revisionVersion" /></svn>
		<!--  A hack because svnant does not respect Ant's properties can't be overwritten rule. -->
		<property name="version" value="${revisionVersion}" />
	</target>

	<target name="rt-task">
		<taskdef name="retroweaver" classname="net.sourceforge.retroweaver.ant.RetroWeaverTask">
		  <classpath>
		    <fileset dir="${retroweaver.home}/lib" includes="**/*"/>
		    <pathelement location="${retroweaver.home}/release/retroweaver-all-${retroweaver.version}.jar"/>
		  </classpath>
		</taskdef>
	</target>

	<target name="junit-compile" depends="jar">
		<mkdir dir="${build.dir}/test/classes"/>

		<javac
			srcdir="${base.dir}/test/java"
			destdir="${build.dir}/test/classes"
			includeAntRuntime="false"
			debug="${build.debug}"
			deprecation="${build.deprecation}"
			target="${ant.build.javac.target}"
			source="${ant.build.javac.source}">

			<classpath refid="test.classpath"/>
		</javac>
	</target>

	<target name="junit" depends="junit-compile">
		<junit printsummary="yes" showoutput="yes" fork="yes">
			<jvmarg value="-Dlog4j.configuration=file:${base.dir}/test/log4j.properties"/>

			<classpath refid="test.classpath"/>

			<formatter type="plain" />

			<batchtest todir="${build.dir}/test/">
				<fileset dir="${build.dir}/test/classes">
					<include name="**/*Test.class" />
				</fileset>
			</batchtest>
		</junit>
	</target>

</project>
